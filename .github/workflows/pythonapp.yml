# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: platiagro
        ports:
        - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Set Docker TAG
      id: var
      run: |
        echo ${{ github.ref }}
        if [ ${{ github.ref }} = "refs/heads/master" ]; then
          echo ::set-output name=TAG::0.1.0
        else
          echo ::set-output name=TAG::0.1.0-SNAPSHOT
        fi
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Run MinIO image
      run: |
        docker run -d -p 9000:9000 \
        -e "MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY" \
        -e "MINIO_SECRET_KEY=$MINIO_SECRET_KEY" \
        minio/minio:RELEASE.2018-02-09T22-40-05Z server /data
      env:
        MINIO_ACCESS_KEY: minio
        MINIO_SECRET_KEY: minio123
    - name: Run jupyter image
      run: docker run --name jupyter -d -p 8888:8888 jupyter/base-notebook start-notebook.sh --NotebookApp.token=''
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install .
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        platiagro-init-db
        coverage erase
        coverage run --branch --source=projects -m pytest
        coverage xml -i
      env:
        MINIO_ENDPOINT: localhost:9000
        MINIO_ACCESS_KEY: minio
        MINIO_SECRET_KEY: minio123
        MYSQL_DB_HOST: localhost
        MYSQL_DB_NAME: platiagro
        MYSQL_DB_USER: root
        JUPYTER_ENDPOINT: http://localhost:8888
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Build and push image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: registry.hub.docker.com
        repository: platiagro/projects
        tags: ${{ steps.var.outputs.TAG }}
